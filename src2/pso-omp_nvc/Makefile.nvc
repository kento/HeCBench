#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = nvc++
OPTIMIZE  = yes
DEBUG     = no
DEVICE    = gpu
SM        = cc70
LAUNCHER  =

#===============================================================================
# Program name & source code list
#===============================================================================

program = main

source = main.cpp kernel_gpu.cpp kernel_cpu.cpp

obj = main.o kernel_gpu.o kernel_cpu.o

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := $(EXTRA_CFLAGS) -Wall -I../pso-cuda 

# Linker Flags
LDFLAGS = 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g 
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

ifeq ($(DEVICE),gpu)
  CFLAGS +=-Minfo -mp=gpu -gpu=$(SM)
else
  CFLAGS +=
endif
#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj)
	$(CC) $(CFLAGS) $(obj) -o $@ $(LDFLAGS)

kernel_gpu.o: kernel_gpu.cpp ../pso-cuda/kernel.h
	$(CC) $(CFLAGS) -c $< -o $@

kernel_cpu.o: ../pso-cuda/kernel_cpu.cpp ../pso-cuda/kernel.h
	$(CC) $(CFLAGS) -c $< -o $@

main.o: ../pso-cuda/main.cpp ../pso-cuda/kernel.h
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(program) $(obj)

run: $(program)
	$(LAUNCHER) ./$(program) 30 10000

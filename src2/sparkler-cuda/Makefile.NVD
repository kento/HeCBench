#===============================================================================
# User Options
#===============================================================================
MPI_ROOT=/opt/nvidia/hpc_sdk/Linux_aarch64/25.1/comm_libs/mpi
CUBLAS_ROOT=/opt/nvidia/hpc_sdk/Linux_aarch64/25.1/math_libs//12.6
CUDART_ROOT=/opt/nvidia/hpc_sdk/Linux_aarch64/25.1/cuda//12.6

# Compiler can be set below, or via environment variable
CC        = nvcc
LD        = mpiCC #$(MPI_ROOT)/bin/mpiCC
OPTIMIZE  = yes
DEBUG     = no
ARCH      = sm_90
LAUNCHER = bash -c

#===============================================================================
# Program name & source code list
#===============================================================================

program = main

source = main.cu

obj = $(source:.cu=.o)

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := $(EXTRA_CFLAGS) -I$(MPI_ROOT)/include -std=c++11 -Xcompiler -Wall -arch=$(ARCH)
# Linker Flags
#LDFLAGS = -L$(CUBLAS_ROOT)/targets/sbsa-linux/lib -lcublas 	  -L$(CUDART_ROOT)/targets/sbsa-linux/lib -lcudart
LDFLAGS = -L$(CUBLAS_ROOT)/targets/sbsa-linux/lib -lcublas 	  -L$(CUDART_ROOT)/targets/sbsa-linux/lib -lcudart

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj) Makefile
	$(LD) $(obj) -o $@ $(LDFLAGS)

%.o: %.cu Makefile
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(program) $(obj)

include ../include/sparkler-NVIDIA

run: $(program)
	$(LAUNCHER) "$(COMMAND)"

run_mem: $(program)
	nvidia-smi --query-gpu=memory.used,memory.total --format=csv --loop-ms=1 > log.mem &
	$(LAUNCHER) "$(COMMAND)"
	pkill nvidia-smi
	../scripts/m.sh


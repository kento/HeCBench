#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = clang++
OPTIMIZE  = yes
DEBUG     = no
DEVICE    = gpu
ARCH      = gfx906
VERIFY    = no
LAUNCHER = bash -c

#===============================================================================
# Program name & source code list
#===============================================================================

program = main

src = ../hogbom-cuda

obj = main.o kernels.o reference.o timer.o

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := $(EXTRA_CFLAGS) -std=c++14 -Wall -I$(src)

# Linker Flags
LDFLAGS = 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g
endif


# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

ifeq ($(VERIFY),yes)
  CFLAGS += -DVERIFY
endif

ifeq ($(DEVICE),gpu)
  CFLAGS += -target x86_64-pc-linux-gnu           -fopenmp -fopenmp-targets=amdgcn-amd-amdhsa           -Xopenmp-target=amdgcn-amd-amdhsa           -march=$(ARCH)
else
  CFLAGS +=-fopenmp
endif
#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj)
	$(CC) $(CFLAGS) $(obj) -o $@ $(LDFLAGS)

main.o: $(src)/main.cpp $(src)/utils.h $(src)/timer.h $(src)/reference.h $(src)/kernels.h
	$(CC) $(CFLAGS) -c $< -o $@

reference.o: $(src)/reference.cpp $(src)/reference.h 
	$(CC) $(CFLAGS) -c $< -o $@

timer.o: $(src)/timer.cpp $(src)/timer.h 
	$(CC) $(CFLAGS) -c $< -o $@

kernels.o: kernels.cpp $(src)/kernels.h $(src)/timer.h 
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(program) $(obj)

include ../include/hogbom-AMD

run: $(program)
	$(LAUNCHER) "$(COMMAND)"

run_mem: $(program)
	../scripts/rocm-smi.sh > log.mem &
	$(LAUNCHER) "$(COMMAND)"
	pkill rocm-smi.sh
	../scripts/rocm-m.sh


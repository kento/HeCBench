#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = hipcc
OPTIMIZE  = yes
DEBUG     = no
ARCH      = sm_60
LAUNCHER = bash -c

#===============================================================================
# Program name & source code list
#===============================================================================

program = main

source = src/gate/*.cpp src/main/*.cpp src/parser/*.cpp          src/sim/*.cu src/util/*.cpp src/wave/*.cpp

header = src/gate/*.h src/parser/*.h          src/sim/*.h src/util/*.h src/wave/*.h

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := $(EXTRA_CFLAGS) -std=c++14  -Wall            -Isrc/gate -Isrc/parser -Isrc/sim -Isrc/util -Isrc/wave

# Linker Flags
LDFLAGS = 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g -DDEBUG
  LDFLAGS  += -g
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif
#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(source) $(header) Makefile
	$(CC) $(CFLAGS) $(source) -o $@ $(LDFLAGS)

clean:
	rm -rf $(program) *.saif

include ../include/logic-resim-NVIDIA

run: $(program)
	$(LAUNCHER) "$(COMMAND)"

run_mem: $(program)
	nvidia-smi --query-gpu=memory.used,memory.total --format=csv --loop-ms=1 > log.mem &
	$(LAUNCHER) "$(COMMAND)"
	pkill nvidia-smi
	../scripts/m.sh


#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = nvc++
OPTIMIZE  = yes
DEBUG     = no
DEVICE    = gpu
SM        = cc70
LAUNCHER = bash -c

#===============================================================================
# Program name & source code list
#===============================================================================

program = divergence


#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := $(EXTRA_CFLAGS) -std=c++14 -Wall 

# Linker Flags
LDFLAGS = 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

ifeq ($(DEVICE),gpu)
  CFLAGS +=-Minfo -mp=gpu -gpu=$(SM)
else
  CFLAGS +=-qopenmp
endif
#===============================================================================
# Targets to Build
#===============================================================================

$(program): divergence.o timer.o 
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)

divergence.o: divergence.cpp divergence.hpp Makefile
	$(CC) $(CFLAGS) -c $< -o $@

timer.o: timer/timer.cpp timer/timer.hpp
	$(CC) $(CFLAGS) -c $< -o $@


clean:
	rm -rf $(program) *.o

include ../include/divergence-NVIDIA

run: $(program)
	$(LAUNCHER) "$(COMMAND)"

run_mem: $(program)
	nvidia-smi --query-gpu=memory.used,memory.total --format=csv --loop-ms=1 > log.mem &
	$(LAUNCHER) "$(COMMAND)"
	pkill nvidia-smi
	../scripts/m.sh


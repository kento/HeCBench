#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = hipcc
OPTIMIZE  = yes
DEBUG     = no
LAUNCHER = bash -c

#===============================================================================
# Program name & source code list
#===============================================================================

program = main

#c_source = ../frna-cuda/main.c ../frna-cuda/fbase.c ../frna-cuda/fparam.c ../frna-cuda/util.c
c_source = main.c fbase.c fparam.c util.c

cuda_source = frna.cu 

obj = $(c_source:.c=.o) $(cuda_source:.cu=.o) 

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
#CFLAGS := $(EXTRA_CFLAGS) -DINT -std=c++14 -x hip -D__HIP_PLATFORM_AMD__ -Wall -I. -I../frna-cuda
CFLAGS := $(EXTRA_CFLAGS) -DINT -std=c++14 -x hip -D__HIP_PLATFORM_AMD__ -Wall -I. 

# Linker Flags
LDFLAGS = 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g
endif


# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3 -ffast-math
endif

#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj)
	$(CC) $(obj) -o $@ $(LDFLAGS)

%.o: %.cu
	$(CC) $(CFLAGS) -c $< -o $@

#%.o: ../frna-cuda/%.c
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

fbase.o : fbase.c fbase.h util.h cu.h
main.o : main.c frna.h util.h fbase.h
fparam.o : fparam.c fparam.h util.h fbase.h int.h
fprna.o : fprna.cu frna.h util.h cu.h
util.o : util.c util.h

clean:
	rm -rf $(program) $(obj) *.out

test: $(program)
	./$(program) ../frna-cuda/RD0260.seq rd0260.out

include ../include/frna-AMD

run: $(program)
	$(LAUNCHER) "$(COMMAND)"

run_mem: $(program)
	../scripts/rocm-smi.sh > log.mem &
	$(LAUNCHER) "$(COMMAND)"
	pkill rocm-smi.sh
	../scripts/rocm-m.sh


CC        = clang++
OPTIMIZE  = yes
DEBUG     = no
DEVICE    = gpu
ARCH      = gfx906
LAUNCHER  =


# Standard flags
CFLAGS := $(EXTRA_CFLAGS) -std=c++11 -Wall

# Linker flags
LDFLAGS = -lm

ifeq ($(DEVICE),gpu)
  CFLAGS += -target x86_64-pc-linux-gnu \
          -fopenmp -fopenmp-targets=amdgcn-amd-amdhsa \
          -Xopenmp-target=amdgcn-amd-amdhsa \
          -march=$(ARCH)
else
  CFLAGS +=-fopenmp
endif

# Debug Flags
ifeq ($(DEBUG),yes)
	CFLAGS += -g  
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
	CFLAGS += -O3
endif


./srad:	./main.o \
	./util/graphics/graphics.o \
	./util/graphics/resize.o \
	./util/timer/timer.o
	$(CC) $(CFLAGS) ./main.o \
		./util/graphics/graphics.o \
		./util/graphics/resize.o \
		./util/timer/timer.o \
		-lm \
		$(LDFLAGS) -o srad

./main.o: ./main.c ./main.h
	$(CC) $(CFLAGS) $(KERNEL_DIM) ./main.c \
		-c \
		-o ./main.o \
		-O3

./util/graphics/graphics.o:	./util/graphics/graphics.h \
	./util/graphics/graphics.c
	$(CC)	./util/graphics/graphics.c \
		-c \
		-o ./util/graphics/graphics.o \
		-O3

./util/graphics/resize.o:	./util/graphics/resize.h \
	./util/graphics/resize.c
	$(CC)	./util/graphics/resize.c \
		-c \
		-o ./util/graphics/resize.o \
		-O3

./util/timer/timer.o:	./util/timer/timer.h \
	./util/timer/timer.c
	$(CC)	./util/timer/timer.c \
		-c \
		-o ./util/timer/timer.o \
		-O3

clean:
	rm -f ./*.o srad *.pgm ./util/graphics/*.o ./util/timer/*.o

run: srad
	$(LAUNCHER) ./srad 1000 0.5 502 458
